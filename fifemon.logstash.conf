# Parses log files from Fifemon frontend components and sends entries to Elasticsearch.
input {
    file {
        path => "/fife/local/home/ifmon/fifemon/log/fifemon.log"
        type => "grafana"
        start_position => beginning
        add_field => { "instance" => "fifemon-pp" }
    }
    file {
        path => "/fife/local/home/ifmon/fifemon/log/kibana.log"
        #type => "kibana"  
        # kibana log includes a "type" field that overrides our set type,
        # so tag instead and change the type with a filter
        tags => ["kibana"]
        start_position => beginning
        codec => "json"
        add_field => { "instance" => "fifemon-pp" }
    }
    file {
        path => "/fife/local/home/ifmon/fifemon/log/supervisord.log"
        type => "supervisor"
        start_position => beginning
        add_field => { "instance" => "fifemon-pp" }
    }
}
filter {
    if [type] == "grafana" {
        grok {
            patterns_dir => "/fife/local/home/ifmon/fifemon/logstash-config/patterns"
            match => {
                "message" => [ 
                    "%{GRAFANA_PREFIX} Completed %{IPORHOST:source} %{NOTSPACE:user} \"%{WORD:verb} %{NOTSPACE:request}(?: HTTP/%{NUMBER:httpversion})\" %{NUMBER:response_code} %{DATA:response} %{NUMBER:bytes} bytes in %{NUMBER:response_time_us}us",
                    "%{GRAFANA_PREFIX} %{GREEDYDATA:msg}"
                ]
            }
        } 
        date {
            match => [ "timestamp", "YYYY/MM/dd HH:mm:ss" ]
            remove_field => [ "timestamp" ]
        }
    } else if "kibana" in [tags] {
        mutate {
            add_field => {"msg_type" => "%{type}"}
        }
        # have to do this in separate blocks, or msg_type becomes "kibana"
        mutate {
            update => {"type" => "kibana"}
            remove_tag => ["kibana"]
        }
    } else if [type] == "supervisor" {
        grok {
            match => {
                "message" => [ 
                    "%{TIMESTAMP_ISO8601:timestamp} %{WORD:loglevel} %{GREEDYDATA:msg}"
                ]
            }
        } 
        date {
            match => [ "timestamp", "ISO8601" ]
            remove_field => [ "timestamp" ]
        }
    }
    if "_grokparsefailure" in [tags] {
        drop {}
    }
        
}
output {
    #stdout { codec => "rubydebug" }
    elasticsearch {
        hosts => [ "fifemon-es.fnal.gov:443" ]
        ssl => true
        cacert => "/etc/grid-security/certificates/cilogon-osg.pem"
        keystore => "/fife/local/home/ifmon/certs/gracc/logstash_fifebatch_fnal_gov.p12"
        keystore_password => ""
        index => "logstash-fifemon-%{+YYYY.MM.dd}"
    }
}

